{"version":3,"sources":["components/Pages.js","components/Spinner.js","components/Character.js","constants.js","components/CharactersData.js","index.js","App.js"],"names":["totalPages","setPage","listItem","number","key","onClick","href","id","items","i","push","list","className","props","loading","Spinner","src","img","alt","name","status","species","sex","origin","lastlocation","lastdimension","lastepisode","lastepisodename","allepisodes","map","n","API_URL","getEpisodeNumber","character","episode","length","split","getOrigin","replace","slice","getlastlocation","location","getlastdimension","locationDimension","getAllEpisodes","numberOfEpisodes","episodesnumber","Characters","currentpage","episodesList","countCharacters","useState","characters","setCharacter","setLoading","currentPage","useEffect","mounted","axios","get","then","data","results","err","console","log","Character","image","gender","episodelist","ReactDOM","render","pages","setNumberOfPages","setCountCharacters","setCurrentPage","countEpisodes","setCountEpisodes","episodes","setepisodes","setEpisodesList","info","count","catch","countArray","Pages","document","getElementById"],"mappings":"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","file":"static/js/main.000dbacb.chunk.js","sourcesContent":["/* eslint-disable no-plusplus */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nexport default ({ totalPages, setPage }) => {\n  const listItem = (number) => (\n    <li key={number}>\n      <a onClick={() => setPage(number)} href=\"!#\">\n        {number}\n      </a>\n    </li>\n  );\n\n  const list = () => {\n    const items = [];\n    for (let i = 1; i <= totalPages; i++) {\n      items.push(listItem(i));\n    }\n    return (\n      <ul>\n        {' '}\n        {items}\n        {' '}\n      </ul>\n    );\n  };\n\n  return (\n    <nav id=\"pagination\">\n      {list()}\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport default () => (\n  <div className=\"spinner\">\n    <span className=\"spinner-inner-1\" />\n    <span className=\"spinner-inner-2\" />\n    <span className=\"spinner-inner-3\" />\n  </div>\n);\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport Spinner from './Spinner';\n\nexport default (props) => ((props.loading)\n  ? <Spinner />\n  : (\n    <ul>\n      <article>\n        <div className=\"flip-card-container\">\n\n          <div className=\"flip-card\">\n            <div className=\"flip-card-front\">\n              <header>\n                <div className=\"shadow\">\n                  <img src={props.img} alt={props.name} className=\"card__img\" />\n                </div>\n                <h2>{props.name}</h2>\n                <h3>{props.status}</h3>\n              </header>\n              <div className=\"info\">\n                <span>species</span>\n                <p>{props.species}</p>\n              </div>\n              <div className=\"info\">\n                <hr />\n                <span>sex</span>\n                <p>{props.sex}</p>\n              </div>\n              <div className=\"info\">\n                <hr />\n                <span>origin</span>\n                <p>{props.origin}</p>\n              </div>\n              <div className=\"info\">\n                <hr />\n                <span>last location</span>\n                <p>{props.lastlocation}</p>\n              </div>\n              <div className=\"info\">\n                <hr />\n                <span>last dimension</span>\n                <p>{props.lastdimension}</p>\n              </div>\n              <div className=\"info\">\n                <hr />\n                <span>last episode seen</span>\n                <p>\n                ep.\n                  {props.lastepisode}\n                  {' '}\n                  <br />\n                  {props.lastepisodename}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"flip-card-back\">\n              <div className=\"card-back-info\">\n                <h1> Episodes </h1>\n                {props.allepisodes.map((n) => (\n                  <span key={n}>\n                    {' '}\n                    {n}\n                    {' '}\n                  </span>\n                ))}\n\n              </div>\n            </div>\n\n\n          </div>\n\n        </div>\n      </article>\n    </ul>\n\n  ));\n","export const API_URL = 'https://rickandmortyapi.com/api/';\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-plusplus */\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Character from './Character';\nimport { API_URL } from '../constants';\n\nconst getEpisodeNumber = (character) => {\n  const episodelink = character.episode[character.episode.length - 1];\n  return episodelink.split('/episode/')[1];\n};\n\nfunction getOrigin(character) {\n  const origin = character.origin.name.replace('(', ' - ');\n  return origin.slice(0, -1);\n}\n\nfunction getlastlocation(character) {\n  const lastlocation = character.location.name.split('(')[0];\n  return lastlocation;\n}\n\nfunction getlastdimension(character) {\n  const locationname = character.location.name;\n  const locationDimension = locationname.split('(')[1];\n  if (!locationDimension) { return 'unknown'; }\n  const lastDimension = locationDimension.slice(0, -1);\n  return lastDimension;\n}\n\nfunction getlastepisodename(episodelist, number) {\n  const lastepisodename = episodelist[number - 1].name;\n  if (lastepisodename) {\n    return (episodelist[number - 1].name);\n  } return 'unknown';\n}\n\nconst getAllEpisodes = (character) => {\n  const numberOfEpisodes = character.episode.length - 1;\n  const episodesnumber = [];\n  for (let i = 0; i <= numberOfEpisodes; i++) {\n    episodesnumber.push(character.episode[i].split('/episode/')[1]);\n  }\n  return episodesnumber;\n};\n\nexport default function Characters({ currentpage, episodesList, countCharacters }) {\n  const [characters, setCharacter] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const currentPage = currentpage || 1;\n\n  useEffect(() => {\n    let mounted = true;\n    setLoading(true);\n    axios.get(`${API_URL}character/?page=${currentPage}`).then((data) => {\n      if (mounted) {\n        setCharacter(data.data.results);\n        setLoading(false);\n      }\n    }).then((err) => console.log(err));\n    return () => {\n      console.log('unmounted');\n      mounted = false;\n    };\n  }, [currentPage]);\n\n  const renderCharacter = (character) => (\n    <Character\n      key={character.id}\n      img={character.image}\n      name={character.name}\n      status={character.status}\n      species={character.species}\n      sex={character.gender}\n      origin={getOrigin(character)}\n      lastlocation={getlastlocation(character)}\n      lastdimension={getlastdimension(character)}\n      lastepisode={getEpisodeNumber(character)}\n      lastepisodename={getlastepisodename(episodesList, getEpisodeNumber(character))}\n      loading={loading}\n\n                // Get all episodes to show at the back of the card\n      allepisodes={getAllEpisodes(character)}\n    />\n\n\n  );\n  return (\n    <div className=\"main-nav\">\n      <h1 className=\"title\">Characters</h1>\n      <p className=\"c-count\">\n          count -\n        {currentpage * 20}\n          /\n        {countCharacters}\n      </p>\n      <p className=\"c-count\">{currentpage}</p>\n      <div id=\"grid\">\n        {characters.map(renderCharacter)}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","/* eslint-disable no-plusplus */\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Pages from './components/Pages';\nimport CharactersData from './components/CharactersData';\nimport { API_URL } from './constants';\nimport './styles/styles.scss';\n\nexport default () => {\n  const [loading, setLoading] = useState(false);\n\n  const [pages, setNumberOfPages] = useState();\n  const [countCharacters, setCountCharacters] = useState();\n  const [currentpage, setCurrentPage] = useState(1);\n\n  const [countEpisodes, setCountEpisodes] = useState();\n  const [episodes, setepisodes] = useState([]);\n  const [episodesList, setEpisodesList] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    axios.get(`${API_URL}character/`).then((data) => {\n      setNumberOfPages(data.data.info.pages);\n      setCountCharacters(data.data.info.count);\n    }).catch((err) => console.log(err));\n\n    axios.get(`${API_URL}episode/`).then((data) => {\n      setCountEpisodes(data.data.info.count);\n    }).catch((err) => console.log(err));\n  }, []);\n\n  //\n  // --------- Fetch All Episodes from the API\n  //\n  useEffect(() => {\n    setLoading(true);\n\n    if (countEpisodes) {\n      const countArray = [];\n      for (let i = 1; i <= countEpisodes; i++) {\n        countArray.push(i);\n      }\n\n      axios.get(`${API_URL}episode/${countArray}`).then((data) => {\n        setepisodes(data.data);\n        setLoading(false);\n      }).catch((err) => console.log(err));\n    }\n  }, [countEpisodes]);\n\n  // ---- Make sure doens't throw error if array empty\n\n  useEffect(() => {\n    if (episodes.length > 0) {\n      setEpisodesList(episodes);\n    }\n  }, [episodes]);\n\n  return (\n    <div>\n      {loading ? (\n        <div className=\"spinner\">\n          <span className=\"spinner-inner-1\" />\n          <span className=\"spinner-inner-2\" />\n          <span className=\"spinner-inner-3\" />\n        </div>\n      ) : (\n        <div>\n          <img className=\"title\" src=\"https://carlisletheacarlisletheatre.org/images/rick-and-morty-logo-svg-3.png\" alt=\"Rick and Morty\" />\n          <CharactersData\n            currentpage={currentpage}\n            episodesList={episodesList}\n            countCharacters={countCharacters}\n          />\n          <Pages\n            totalPages={pages}\n            setPage={setCurrentPage}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n"],"sourceRoot":""}